services:
  microserver-app:
    container_name: microserver
    build: ./microserverapp_resources
    #environment:
    #  - NODE_ENV=dev
    ports:
      - "8085:8085"
    depends_on:
      postgres:
        condition: service_healthy
    #command: ["./wait-for-it.sh", "postgres:5432", "--timeout=20"]
    restart: always

  postgres:
    container_name: postgres
    image: postgres:17
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 5
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST_AUTH_METHOD=trust # NOt for productive env.
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - postgres_files:/var/lib/postgresql/data # Mounts 'db_data' to '/var/lib/postgresql/data' inside 'database' container

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    ports:
      - "5050:80"
    restart: always

volumes:
  postgres_files:
    #external: true
    #  ./postgres_files